{
    "output_list": [
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "function_code": "function transfer(address _to, uint256 _value) {
        _transfer(msg.sender, _to, _value);
    }",
            "reason": "The function transfer does not check if the value being transferred is greater than the sender's balance. This can lead to an integer overflow if the sender has insufficient balance."
        },
        {
            "function_name": "_transfer",
            "vulnerability": "Integer Overflow",
            "function_code": "function _transfer(address _from, address _to, uint _value) internal {
        require (_to != 0x0);
        require (balanceOf[_from] > _value);
        require (balanceOf[_to] + _value > balanceOf[_to]);
        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        Transfer(_from, _to, _value);
    }",
            "reason": "The function _transfer does not check if the value being transferred is greater than the sender's balance. This can lead to an integer overflow if the sender has insufficient balance."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Integer Overflow",
            "function_code": "function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
        require (_value <= allowance[_from][msg.sender]);
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }",
            "reason": "The function transferFrom does not check if the value being transferred is greater than the sender's balance. This can lead to an integer overflow if the sender has insufficient balance."
        },
        {
            "function_name": "approveAndCall",
            "vulnerability": "Bad Randomness",
            "function_code": "function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {
        tokenRecipient spender = tokenRecipient(_spender);
        if (approve(_spender, _value)) {
            spender.receiveApproval(msg.sender, _value, this, _extraData);
            return true;
        }
    }",
            "reason": "The function approveAndCall does not check if the value being approved is greater than the sender's balance. This can lead to an integer overflow if the sender has insufficient balance."
        },
        {
            "function_name": "burn",
            "vulnerability": "Integer Overflow",
            "function_code": "function burn(uint256 _value) returns (bool success) {
        require (balanceOf[msg.sender] > _value);
        balanceOf[msg.sender] -= _value;
        totalSupply -= _value;
        Burn(msg.sender, _value);
        return true;
    }",
            "reason": "The function burn does not check if the value being burned is greater than the sender's balance. This can lead to an integer overflow if the sender has insufficient balance."
        }
    ]
}