 {
    "output_list": [
        {
            "function_name": "request_dividend",
            "vulnerability": "Access Control",
            "function_code": "function request_dividend(address token_holder) payable
{
    holder_token_balance = balanceOf(token_holder)/10000000000;
    Message(holder_token_balance);
    holder_profit = holder_token_balance * profit_per_token;
    Message(holder_profit);
     Transfer(owner, token_holder , (holder_profit/10**18)); 
    token_holder.send(holder_profit);   
}",
            "reason": "The `request_dividend` function allows any user to call it and transfer tokens to themselves, which can be exploited by anyone to drain the contract of its tokens. The function does not check if the caller is the intended token holder, allowing any user to claim tokens that do not belong to them."
        },
        {
            "function_name": "transfer_ownership",
            "vulnerability": "Access Control",
            "function_code": "function transfer_ownership(address to) onlyOwner {
    if (msg.sender != owner) throw;
    owner = to;
     balances[owner]=balances[msg.sender];
     balances[msg.sender]=0;
}",
            "reason": "The `transfer_ownership` function allows the owner to transfer ownership to any address, which can lead to unauthorized transfer of ownership and control of the contract. This is a critical vulnerability as it can render the contract unusable by the rightful owner."
        }
    ]
}