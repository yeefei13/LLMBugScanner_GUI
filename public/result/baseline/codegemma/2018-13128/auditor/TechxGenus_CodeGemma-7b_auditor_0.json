tput: 
{
    "output_list": [
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "function_code": "function transfer(address _to, uint _value) public {
    uint codeLength;
    bytes memory empty;
    assembly {
        codeLength := extcodesize(_to)
    }
    balances[_to] = balances[_to].add(_value);
    balances[_from] = balances[_from].sub(_value);
    if(codeLength > 0) {
        ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);
        receiver.tokenFallback(msg.sender, _value, empty);
    }
    emit Transfer(_from, _to, _value);
}",
            "reason": "The transfer function is susceptible to integer overflow if the input value is large. This could potentially cause the function to behave unexpectedly or fail."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Access Control",
            "function_code": "function transferFrom(address _from, address _to, uint _value) public {
    uint256 _allowance = allowed[_from][msg.sender];
    balances[_from] = balances[_from].sub(_value);
    balances[_to] = balances[_to].add(_value);
    allowed[_from][msg.sender] = _allowance.sub(_value);
    if(codeLength>0) {
        ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);
        receiver.tokenFallback(msg.sender, _value, empty);
    }
    emit Transfer(_from, _to, _value);
}",
            "reason": "The function transferFrom() is susceptible to access control if the sender has a larger allowance than the receiver. This could potentially cause the function to transfer more tokens than intended."
        }
    ]
}<eos>