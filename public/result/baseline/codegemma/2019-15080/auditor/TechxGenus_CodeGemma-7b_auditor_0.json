tput: 
{
    "output_list": [
        {
            "function_name": "transfer",
            "vulnerability": "Weak Randomness",
            "function_code": "function transfer(address _to, uint256 _value) public returns (bool) {
                require(!isblacklistedAccount[msg.sender]);
                require(!isblacklistedAccount[_to]);
                require(balanceOf[msg.sender] > 0);
                require(balanceOf[msg.sender] >= _value);
                require(_to != address(0));
                require(_value > 0);
                require(balanceOf[_to] .add(_value) >= balanceOf[_to];
                require(_to != msg.sender);
                balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);
                balanceOf[_to] = balanceOf[_to].add(_value);
                Transfer(msg.sender, _to, _value);
                return true;
            }",
            "reason": "The function relies on a hardcoded address as the owner of the contract. This can be exploited by a malicious attacker to transfer ownership of the contract to themselves."
        },
        {
            "function_name": "mintTokens",
            "vulnerability": "Integer Overflow",
            "function_code": "function mintTokens(uint256 _mintedAmount) public onlyOwner {
                balanceOf[owner] = balanceOf[owner].add(_mintedAmount);
                totalSupply = totalSupply.add(_mintedAmount);
                Transfer(0, owner, _mintedAmount);
            }",
            "reason": "The function has no checks to prevent a malicious user from minting more tokens than the total supply. This can lead to an integer overflow if the input is large enough."
        }
    ]
}<eos>