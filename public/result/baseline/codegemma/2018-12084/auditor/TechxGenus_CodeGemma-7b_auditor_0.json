tput: 
{
    "output_list": [
        {
            "function_name": "BitAseanToken.transfer",
            "vulnerability": "Integer Overflow",
            "function_code": "function transfer(address _to, uint256 _value) { ... }",
            "reason": "The function doesn't check for the value of `_value` to be less than or equal to the balance of the sender. This can allow an attacker to transfer more funds than they actually own."
        },
        {
            "function_name": "BitAseanToken.transferFrom",
            "vulnerability": "Wrong Logic",
            "function_code": "function transferFrom(address _from, address _to, uint256 _value) returns (bool success) { ... }",
            "reason": "The function doesn't correctly check if the recipient of the transfer has enough balance to receive the transferred amount. It can allow an attacker to transfer more funds than they are entitled to."
        },
        {
            "function_name": "BitAseanToken.mintToken",
            "vulnerability": "Bad Randomness",
            "function_code": "function mintToken(address target, uint256 mintedAmount) onlyOwner { ... }",
            "reason": "The function doesn't use a secure random number generator to determine the `mintedAmount`. This can allow an attacker to manipulate the `mintToken` function to mint more tokens than they should."
        },
        {
            "function_name": "BitAseanToken.freezeAccount",
            "vulnerability": "Access Control",
            "function_code": "function freezeAccount(address target, bool freeze) onlyOwner { ... }",
            "reason": "The function doesn't properly check if the caller is the owner of the target account. This can allow an attacker to freeze an account owned by someone else."
        },
        {
            "function_name": "BitAseanToken.approveAndCall",
            "vulnerability": "Typo Constructor",
            "function_code": "function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) { ... }",
            "reason": "The function doesn't use a properly encoded `_extraData` parameter. This can allow an attacker to call functions on other contracts with invalid input parameters."
        }
    ]
}<eos>