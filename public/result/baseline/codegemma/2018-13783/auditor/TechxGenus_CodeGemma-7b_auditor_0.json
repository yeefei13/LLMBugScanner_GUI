tput: 
{
    "output_list": [
        {
            "function_name": "mintToken",
            "vulnerability": "Weak Randomness",
            "function_code": "mintToken(address target, uint256 mintedAmount) onlyOwner public {...}",
            "reason": "The function relies on the solidity's built-in random function, which is not truly random. This can be exploited to create a contract with an incorrect balance."
        },
        {
            "function_name": "freezeAccount",
            "vulnerability": "Access Control",
            "function_code": "freezeAccount(address target, bool freeze) onlyOwner public {...}",
            "reason": "The function is missing proper access controls, which allows anyone to freeze or unfreeze an account."
        },
        {
            "function_name": "setPrices",
            "vulnerability": "Integer Overflow",
            "function_code": "setPrices(uint256 newPrice, uint256 newPriceInc, uint256 newTransferFees) onlyOwner public {...}",
            "reason": "The function is susceptible to integer overflow if the newPrice or newTransferFees values are large. No checks are made to ensure that these values are within the permissible range."
        },
        {
            "function_name": "buy",
            "vulnerability": "Access Control",
            "function_code": "buy() public payable {...}",
            "reason": "The function is accessible to anyone, allowing them to buy the token without any restrictions or checks."
        },
        {
            "function_name": "sell",
            "vulnerability": "Integer Overflow",
            "function_code": "sell(uint256 amount) public {...}",
            "reason": "The function is susceptible to integer overflow if the amount value is large. No checks are made to ensure that the amount is within the permissible range."
        }
    ]
}<eos>