{
    "output_list": [
        {
            "function_name": "sellOffline",
            "auditor_idx": 0,
            "vulnerability": "Integer Overflow",
            "criticism": "The function sellOffline takes in a uint256 token_amount and multiplies it by 10^18 to convert it to the smallest denomination of the token. If the resulting value is greater than the remaining tokens in the contract, it will cause an integer overflow. This can be exploited by an attacker to mint more tokens than the contract has remaining supply.",
            "correctness": 7,
            "severity": 8,
            "profitability": 5
        },
        {
            "function_name": "setEthRate",
            "auditor_idx": 0,
            "vulnerability": "Integer Overflow",
            "criticism": "The function setEthRate takes in a uint newEthRate and assigns it to the ethRate variable. If the newEthRate is greater than the maximum value that can be stored in a uint, it will cause an integer overflow. This can be exploited by an attacker to set the ethRate to a value that is too high, leading to incorrect calculations and potentially loss of funds.",
            "correctness": 7,
            "severity": 8,
            "profitability": 5
        },
        {
            "function_name": "setTokenPrice",
            "auditor_idx": 0,
            "vulnerability": "Integer Overflow",
            "criticism": "The function setTokenPrice takes in a uint newTokenRate and assigns it to the icoTokenPrice variable. If the newTokenRate is greater than the maximum value that can be stored in a uint, it will cause an integer overflow. This can be exploited by an attacker to set the icoTokenPrice to a value that is too high, leading to incorrect calculations and potentially loss of funds.",
            "correctness": 7,
            "severity": 8,
            "profitability": 5
        },
        {
            "function_name": "mintToken",
            "auditor_idx": 0,
            "vulnerability": "Integer Overflow",
            "criticism": "The function mintToken takes in a uint256 tokensToMint and multiplies it by 10^18 to convert it to the smallest denomination of the token. If the resulting value is greater than the maximum value that can be stored in a uint, it will cause an integer overflow. This can be exploited by an attacker to mint more tokens than the contract has remaining supply.",
            "correctness": 7,
            "severity": 8,
            "profitability": 5
        },
        {
            "function_name": "adm_trasfer",
            "auditor_idx": 0,
            "vulnerability": "Typo Constructor",
            "criticism": "The function adm_trasfer has a typo in its name. The correct name should be adm_transfer. This typo can be exploited by an attacker to call the wrong function, potentially leading to incorrect calculations and potentially loss of funds.",
            "correctness": 6,
            "severity": 7,
            "profitability": 4
        }
    ]
}