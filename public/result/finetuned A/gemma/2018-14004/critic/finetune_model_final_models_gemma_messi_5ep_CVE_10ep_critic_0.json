{"output_list": [{"function_name": "balance_wirthdraw", "vulnerability": "Integer Overflow", "criticism": "The balance_wirthdraw function is responsible for transferring the balance of the crowdsale to the owner. It does this by calling the balance of the crowdsale, which returns the balance in an integer. The balance is also checked to see if it is zero, in case the owner has not set the balance yet. The balance is subtracted from the total balance of the crowdsale, which also has to be subtracted from the balance of the owner, in case the owner has set the balance to zero. The subtraction is allowed to be negative, in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_text", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_text function is responsible for setting the text to be displayed in the crowdsale view. It takes the balance of the crowdsale as an argument, which is an integer. The balance is subtracted from the total balance of the crowdsale, again allowing subtraction to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "add_Exchanges", "vulnerability": "Integer Overflow", "criticism": "The add_Exchanges function is responsible for adding the exchanges to the existing set of exchanges. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "developer_new_symbol", "vulnerability": "Integer Overflow", "criticism": "The developer_new_symbol function is responsible for changing the symbol of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "developer_new_address", "vulnerability": "Integer Overflow", "criticism": "The developer_new_address function is responsible for changing the address of the funds. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "developer_crowdsale_text", "vulnerability": "Integer Overflow", "criticism": "The developer_crowdsale_text function is responsible for setting the text to be displayed in the crowdsale view. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, again allowing subtraction to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "developer_add_Excharts", "vulnerability": "Integer Overflow", "criticism": "The developer_add_Excharts function is responsible for adding the charts to the existing set of charts. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "developer_new_symbol", "vulnerability": "Integer Overflow", "criticism": "The developer_new_symbol function is responsible for changing the symbol of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "developer_new_address", "vulnerability": "Integer Overflow", "criticism": "The developer_new_address function is responsible for changing the address of the funds. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_balance", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_balance function is responsible for calculating the balance of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_symbol", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_symbol function is responsible for returning the symbol of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_address", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_address function is responsible for returning the address of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_number_of_rounds", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_number_of_rounds function is responsible for calculating the number of rounds the crowdsale will go through. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_round_number", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_round_number function is responsible for returning the round number of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_duration", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_duration function is responsible for calculating the duration of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_start_time", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_start_time function is responsible for calculating the start time of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_end_time", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_end_time function is responsible for calculating the end time of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_token_info", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_token_info function is responsible for calculating the token information of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_base_currency", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_base_currency function is responsible for calculating the base currency of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_currency", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_currency function is responsible for calculating the currency of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_decimal_rate", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_decimal_rate function is responsible for calculating the decimal rate of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_token_decimals", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_token_decimals function is responsible for calculating the number of decimals in the token representation of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_token_length", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_token_length function is responsible for calculating the length of the token representation of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_new_symbol", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_new_symbol function is responsible for changing the symbol of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_new_address", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_new_address function is responsible for changing the address of the funds. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_number_of_rounds", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_number_of_rounds function is responsible for calculating the number of rounds the crowdsale will go through. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_round_number", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_round_number function is responsible for getting the round number of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_duration", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_duration function is responsible for getting the duration of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_base_currency", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_base_currency function is responsible for getting the base currency of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_currency", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_currency function is responsible for getting the currency of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_decimal_rate", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_decimal_rate function is responsible for getting the decimal rate of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_token_decimals", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_token_decimals function is responsible for getting the number of decimals in the token representation of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_token_length", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_token_length function is responsible for getting the length of the token representation of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_new_symbol", "vulnerability": "Integer Overflow", "criticism": "The crowdsale_new_symbol function is responsible for getting the new symbol of the crowdsale. It takes the balance of the crowdsale as an argument, which again has the risk of being an integer. The balance is subtracted from the total balance of the crowdsale, allowing subtraction to be negative. The subtraction is allowed to be negative in case the owner has set the balance to a negative number."}]}
{"output_list": [{"function_name": "crowdsale_new_address", "vulnerability": "Integer Overflow", 