Code Input: 

pragma solidity ^0.5.11;
contract ERC20
{
    function totalSupply()
        public
        view
        returns (uint);
    function balanceOf(
        address who
        )
        public
        view
        returns (uint);
    function allowance(
        address owner,
        address spender
        )
        public
        view
        returns (uint);
    function transfer(
        address to,
        uint value
        )
        public
        returns (bool);
    function transferFrom(
        address from,
        address to,
        uint    value
        )
        public
        returns (bool);
    function approve(
        address spender,
        uint    value
        )
        public
        returns (bool);
}
library AddressUtil
{
    using AddressUtil for *;
    function isContract(
        address addr
        )
        internal
        view
        returns (bool)
    {
        uint32 size;
        assembly { size := extcodesize(addr) }
        return (size > 0);
    }
    function toPayable(
        address addr
        )
        internal
        pure
        returns (address payable)
    {
        return address(uint160(addr));
    }
    function sendETH(
        address to,
        uint    amount,
        uint    gasLimit
        )
        internal
        returns (bool success)
    {
        if (amount == 0) {
            return true;
        }
        address payable recipient = to.toPayable();
        (success, ) = recipient.call.value(amount).gas(gasLimit)("");
    }
    function sendETHAndVerify(
        address to,
        uint    amount,
        uint    gasLimit
        )
        internal
        returns (bool success)
        {