[
  {
    "function_name": "transferOwnership",
    "auditor_idx": "1",
    "vulnerability": "The function transferOwnership is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function transferOwnership is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "transfer",
    "auditor_idx": "1",
    "vulnerability": "The function transfer is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function transfer is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "transferFrom",
    "auditor_idx": "1",
    "vulnerability": "The function transferFrom is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function transferFrom is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "approve",
    "auditor_idx": "1",
    "vulnerability": "The function approve is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function approve is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "approveAndCall",
    "auditor_idx": "1",
    "vulnerability": "The function approveAndCall is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function approveAndCall is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "burn",
    "auditor_idx": "1",
    "vulnerability": "The function burn is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function burn is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "burnFrom",
    "auditor_idx": "1",
    "vulnerability": "The function burnFrom is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function burnFrom is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "buy",
    "auditor_idx": "1",
    "vulnerability": "The function buy is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function buy is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  },
  {
    "function_name": "sell",
    "auditor_idx": "1",
    "vulnerability": "The function sell is vulnerable to reentrancy attacks.",
    "criticism": "Reentrancy attacks occur when a contract calls another contract during its execution, and the called contract can call back into the original contract before the first call has completed. This can lead to unexpected behavior and loss of funds. The function sell is not protected against reentrancy attacks.",
    "correctness": 7,
    "severity": 7,
    "profitability": 7
  }
]