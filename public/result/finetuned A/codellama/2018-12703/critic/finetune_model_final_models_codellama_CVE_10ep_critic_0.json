{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "balanceOf", "vulnerability": "Integer Overflow", "description": "The balanceOf function has an integer overflow in the calculation of balances[_owner]."}]}
{"output_list": [{"function_name": "totalSupply", "vulnerability": "Integer Overflow", "description": "The totalSupply function has an integer overflow in the calculation of totalSupply."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of allowed[_owner][msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "balanceOf", "vulnerability": "Integer Overflow", "description": "The balanceOf function has an integer overflow in the calculation of balances[_owner]."}]}
{"output_list": [{"function_name": "totalSupply", "vulnerability": "Integer Overflow", "description": "The totalSupply function has an integer overflow in the calculation of totalSupply."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of allowed[_owner][msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "balanceOf", "vulnerability": "Integer Overflow", "description": "The balanceOf function has an integer overflow in the calculation of balances[_owner]."}]}
{"output_list": [{"function_name": "totalSupply", "vulnerability": "Integer Overflow", "description": "The totalSupply function has an integer overflow in the calculation of totalSupply."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of allowed[_owner][msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "balanceOf", "vulnerability": "Integer Overflow", "description": "The balanceOf function has an integer overflow in the calculation of balances[_owner]."}]}
{"output_list": [{"function_name": "totalSupply", "vulnerability": "Integer Overflow", "description": "The totalSupply function has an integer overflow in the calculation of totalSupply."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of allowed[_owner][msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "balanceOf", "vulnerability": "Integer Overflow", "description": "The balanceOf function has an integer overflow in the calculation of balances[_owner]."}]}
{"output_list": [{"function_name": "totalSupply", "vulnerability": "Integer Overflow", "description": "The totalSupply function has an integer overflow in the calculation of totalSupply."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of allowed[_owner][msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "balanceOf", "vulnerability": "Integer Overflow", "description": "The balanceOf function has an integer overflow in the calculation of balances[_owner]."}]}
{"output_list": [{"function_name": "totalSupply", "vulnerability": "Integer Overflow", "description": "The totalSupply function has an integer overflow in the calculation of totalSupply."}]}
{"output_list": [{"function_name": "transfer", "vulnerability": "Integer Overflow", "description": "The transfer function has an integer overflow in the calculation of _value * _to[msg.sender]."}]}
{"output_list": [{"function_name": "transferFrom", "vulnerability": "Integer Overflow", "description": "The transferFrom function has an integer overflow in the calculation of _value * _from[msg.sender]."}]}
{"output_list": [{"function_name": "approve", "vulnerability": "Integer Overflow", "description": "The approve function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
{"output_list": [{"function_name": "allowance", "vulnerability": "Integer Overflow", "description": "The allowance function has an integer overflow in the calculation of allowed[_owner][msg.sender]."}]}
{"output_list": [{"function_name": "receiveApproval", "vulnerability": "Integer Overflow", "description": "The receiveApproval function has an integer overflow in the calculation of _value * _extraData[msg.sender]."}]}
]
}
}
contract EightteenToken is EightteenTokenInterface {
    uint256 constant private MAX_UINT256 = 2**256 - 1;
    mapping (address => uint256) balances;
    mapping (address => mapping (address => uint256)) allowed;
    uint256 public totalSupply = 1000000000 * 10 ** uint256(decimals);
    string public name = "Block 18";                   
    uint8 public decimals = 18;                
    string public symbol = "18T";                 
    string public version = 'v0.1';       
    function EightteenToken() {
        balances[msg.sender] = totalSupply;
    }
    function balanceOf(address _owner) constant returns (uint256 balance) {
        return balances[_owner];
    }
    function transfer(address _to, uint256 _value) returns (bool success) {
        require(_to != address(0));
        require(_value <= balances[msg.sender]);
        balances[msg.sender] -= _value;
        balances[_to] += _value;
        Transfer(msg.sender, _to, _value);
        return true;
    }
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
        require(_to != address(0));
        require(_value <= balances[_from]);
        require(_value <= allowed[_from][msg.sender]);
        balances[_from] -= _value;
        balances[_to] += _value;
        allowed[_from][msg.sender] -= _value;
        Transfer(_from, _to, _value);
        return true;
    }
    function approve(address _spender, uint256 _value) returns (bool success) {
        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
        return true;
    }
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
        return allowed[_owner][_spender];
    }
    event Transfer(address indexed _from, address indexed _to, uint256 _value);
    event Approval(address indexed _owner, address indexed _spender, uint256 _value);
}
contract EightteenTokenPreSale is EightteenToken {
    uint256 public rate = 10000;
    uint256 public weiRaised;
    uint256 public preSaleTokens = 100000000 * 10 ** uint256(decimals);
    uint256 public preSaleEnds = 1514764800;
    bool public isPreSale = true;
    address public owner;
    event PreSaleEnded(address _owner);
    function EightteenTokenPreSale() {
        owner = msg.sender;
        balances[owner] = preSaleTokens;
        Transfer(0x0, owner, preSaleTokens);
    }
    function setPreSaleEnds(uint256 _preSaleEnds) onlyOwner {
        preSaleEnds = _preSaleEnds;
    }
    function setRate(uint256 _rate) onlyOwner {
        rate = _rate;
    }
    function setPreSaleTokens(uint256 _preSaleTokens) onlyOwner {
        preSaleTokens = _preSaleTokens;
    }
    function setPreSale(bool _isPreSale) onlyOwner {
        isPreSale = _isPreSale;
    }
    function setOwner(address _owner) onlyOwner {
        owner = _owner;
    }
    function setRate(uint256 _rate) onlyOwner {
        rate = _rate;
    }
    function setPreSaleEnds(uint256 _preSaleEnds) onlyOwner {
        preSaleEnds = _preSaleEnds;
    }
    function setPreSale(bool _isPreSale) onlyOwner {
        isPreSale = _isPreSale;
    }
    function setPreSaleTokens(uint256 _preSaleTokens) onlyOwner {
        preSaleTokens = _preSaleTokens;
    }
    function setRate(uint256 _rate) onlyOwner {
        rate = _rate;
    }
    function setPreSaleEnds(uint256 _preSaleEnds) onlyOwner {
        preSaleEnds = _preSaleEnds;
    }
    function setPreSale(bool _isPreSale) onlyOwner {
        isPreSale = _isPreSale;
    }
    function setOwner(address _owner) onlyOwner {
        owner = _owner;
    }
    function setRate(uint256 _rate) onlyOwner {
        rate = _rate;
    }
    function setPreSaleEnds(uint256 _preSaleEnds) onlyOwner