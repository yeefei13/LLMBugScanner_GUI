{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing attackers to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Bad Randomness", "impact": "The Virgo_ZodiacToken contract uses `msg.sender` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Bad Randomness", "impact": "The Virgo_ZodiacToken contract uses `msg.sender` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Integer Overflow", "impact": "The morphToken function has an integer overflow, allowing unauthorized users to potentially gain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control", "impact": "The morphToken function uses `owner` as a constant, deterministic 'owner' of the contract. This allows unauthorized users to potentially gain more control than they should."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Integer Overflow", "impact": "The kingOfEther function has an integer overflow, allowing unauthorized users to change the balance of the king without any checks."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Integer Overflow", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Bad Randomness", "impact": "The morphToken function uses `msg.sender` as a source of randomness, allowing unauthorized users to potentially obtain more tokens than they should, thanks to the bad random nature of the function."}]}
{"output_list": [{"function_name": "KingOfEther", "vulnerability": "Access Control", "impact": "The kingOfEther function allows unauthorized users to set the balance of the king. This can be used to create roles with arbitrary permissions."}]}
{"output_list": [{"function_name": "Virgo_ZodiacToken", "vulnerability": "Access Control", "impact": "The Virgo_ZodiacToken contract has no owner, allowing unauthorized users to change contract parameters, potentially gaining more control than they should."}]}
{"output_list": [{"function_name": "MorphToken", "vulnerability": "Access Control",