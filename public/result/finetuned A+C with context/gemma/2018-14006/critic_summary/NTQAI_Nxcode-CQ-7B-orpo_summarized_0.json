{
    "output_list": [
        {
            "function_name": "owner, setOwner, setInitialSupply, setWorldOwner, setNextOwner, setBalanceOfOwner, setSender, setBalances, setTokens, setZero, setMinimumRequirement, setMaximumRequirement, setCurrency, setFee, setOwnerAndAgents, <empty function name>, distribute, transfer, transferFrom, approve, approveAndCall, burn, burnFrom, setMyTokens, setMyBalance, setMyOwner, setNextOwner, setWorldOwner, setSender, setZero, minimumRequirement, maximumRequirement",
            "auditor_idx": 0,
            "vulnerability": "Integer Overflow",
            "criticism": "The functions 'owner', 'setOwner', 'setInitialSupply', 'setWorldOwner', 'setNextOwner', 'setBalanceOfOwner', 'setSender', 'setBalances', 'setTokens', 'setZero', 'setMinimumRequirement', 'setMaximumRequirement', 'setCurrency', 'setFee', 'setOwnerAndAgents', <empty function name>, 'distribute', 'transfer', 'transferFrom', 'approve', 'approveAndCall', 'burn', 'burnFrom', 'setMyTokens', 'setMyBalance', 'setMyOwner', 'setNextOwner', 'setWorldOwner', 'setSender', 'setZero', 'minimumRequirement', 'maximumRequirement' do not check for integer overflow when setting addresses, balances, requirements, or other values. This is a critical vulnerability as it can lead to unexpected behavior and potential loss of funds if an attacker can manipulate these values in a way that causes an overflow.",
            "correctness": 8,
            "severity": 9,
            "profitability": 7
        }
    ]
}