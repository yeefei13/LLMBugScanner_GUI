 {
    "output_list": [
        {
            "function_name": "distributeBTR",
            "vulnerability": "Integer Overflow",
            "reason": "The function 'distributeBTR' has an integer overflow vulnerability. The subtraction operation balances[owner] -= 2000 * 10**8; can overflow if balances[owner] is sufficiently large, causing unintended funds to be added to the recipients' accounts."
        },
        {
            "function_name": "transfer",
            "vulnerability": "Wrong Logic",
            "reason": "The function 'transfer' has a wrong logic vulnerability. The condition balances[msg.sender] >= _amount && _amount > 0 && balances[_to] + _amount > balances[_to] can be false due to integer overflow, allowing unauthorized transfers of funds."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Wrong Logic",
            "reason": "The function 'transferFrom' has a wrong logic vulnerability. The condition balances[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0 && balances[_to] + _amount > balances[_to] can be false due to integer overflow, allowing unauthorized transfers of funds."
        },
        {
            "function_name": "approve",
            "vulnerability": "Integer Overflow",
            "reason": "The function 'approve' has an integer overflow vulnerability. The operation allowed[msg.sender][_spender] = _amount; can overflow if _amount is sufficiently large, allowing the spender to transfer more tokens than intended."
        },
        {
            "function_name": "distributeBTR",
            "vulnerability": "Access Control",
            "reason": "The function 'distributeBTR' has an access control vulnerability. It uses onlyOwner modifier, allowing only the owner to distribute tokens. However, it does not check the length of addresses array, allowing potential attackers to exploit this issue."
        }
    ]
}