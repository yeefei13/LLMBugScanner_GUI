{
    "output_list": [
        {
            "function_name": "balanceOf",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the balanceOf function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transfer function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transferFrom function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "balances",
            "vulnerability": "Access Control",
            "reason": "The balances function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "totalSupply",
            "vulnerability": "Access Control",
            "reason": "The totalSupply function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "mintToken",
            "vulnerability": "Typo Constructor",
            "reason": "Relies on outdated constructor naming conventions prone to typos."
        },
        {
            "function_name": "PayWinner",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "claimThrone",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "enablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "disablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "withdrawForeignTokens",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "getStats",
            "vulnerability": "Access Control",
            "reason": "The getStats function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "name",
            "vulnerability": "Access Control",
            "reason": "The name function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "symbol",
            "vulnerability": "Access Control",
            "reason": "The symbol function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "decimals",
            "vulnerability": "Access Control",
            "reason": "The decimals function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "totalContribution",
            "vulnerability": "Access Control",
            "reason": "The totalContribution function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "totalBonusTokensIssued",
            "vulnerability": "Access Control",
            "reason": "The totalBonusTokensIssued function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "purchasingAllowed",
            "vulnerability": "Access Control",
            "reason": "The purchasingAllowed function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "worldOwner",
            "vulnerability": "Access Control",
            "reason": "The worldOwner function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "PayWinner",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "claimThrone",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "enablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "disablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "withdrawForeignTokens",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "getStats",
            "vulnerability": "Access Control",
            "reason": "The getStats function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "name",
            "vulnerability": "Access Control",
            "reason": "The name function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "symbol",
            "vulnerability": "Access Control",
            "reason": "The symbol function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "decimals",
            "vulnerability": "Access Control",
            "reason": "The decimals function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "balanceOf",
            "vulnerability": "Access Control",
            "reason": "The balanceOf function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transfer function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transferFrom function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "approve",
            "vulnerability": "Access Control",
            "reason": "The approve function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "allowance",
            "vulnerability": "Access Control",
            "reason": "The allowance function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "PayWinner",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "claimThrone",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "enablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "disablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "withdrawForeignTokens",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "getStats",
            "vulnerability": "Access Control",
            "reason": "The getStats function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "name",
            "vulnerability": "Access Control",
            "reason": "The name function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "symbol",
            "vulnerability": "Access Control",
            "reason": "The symbol function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "decimals",
            "vulnerability": "Access Control",
            "reason": "The decimals function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "balanceOf",
            "vulnerability": "Access Control",
            "reason": "The balanceOf function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transfer function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transferFrom function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "approve",
            "vulnerability": "Access Control",
            "reason": "The approve function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "allowance",
            "vulnerability": "Access Control",
            "reason": "The allowance function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "PayWinner",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "claimThrone",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "enablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "disablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "withdrawForeignTokens",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "getStats",
            "vulnerability": "Access Control",
            "reason": "The getStats function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "name",
            "vulnerability": "Access Control",
            "reason": "The name function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "symbol",
            "vulnerability": "Access Control",
            "reason": "The symbol function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "decimals",
            "vulnerability": "Access Control",
            "reason": "The decimals function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "balanceOf",
            "vulnerability": "Access Control",
            "reason": "The balanceOf function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transfer function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transferFrom function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "approve",
            "vulnerability": "Access Control",
            "reason": "The approve function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "allowance",
            "vulnerability": "Access Control",
            "reason": "The allowance function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "PayWinner",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "claimThrone",
            "vulnerability": "Denial of Service",
            "reason": "Refund logic is improperly tied to state updates, enabling DoS attacks."
        },
        {
            "function_name": "enablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "disablePurchasing",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "withdrawForeignTokens",
            "vulnerability": "Denial of Service",
            "reason": "Relies on outdated function naming conventions prone to typos."
        },
        {
            "function_name": "getStats",
            "vulnerability": "Access Control",
            "reason": "The getStats function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "name",
            "vulnerability": "Access Control",
            "reason": "The name function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "symbol",
            "vulnerability": "Access Control",
            "reason": "The symbol function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "decimals",
            "vulnerability": "Access Control",
            "reason": "The decimals function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "balanceOf",
            "vulnerability": "Access Control",
            "reason": "The balanceOf function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transfer",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transfer function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Integer Overflow",
            "reason": "Integer overflow in the transferFrom function allows an attacker to set an arbitrary user's balance to any value."
        },
        {
            "function_name": "approve",
            "vulnerability": "Access Control",
            "reason": "The approve function allows an attacker to set an arbitrary user