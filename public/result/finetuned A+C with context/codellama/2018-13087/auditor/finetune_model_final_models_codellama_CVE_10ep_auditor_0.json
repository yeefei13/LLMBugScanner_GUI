{"output_list": [{"function_name": "PayWinner", "vulnerability": "Integer Overflow", "description": "The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value."}]}
{"function_name": "PayWinner", "vulnerability": "Bad Randomness", "description": "The PayWinner function has an integer overflow in the line `uint ownerTax = 6 * totalBounty / 100;`. This allows an attacker to set the balance of an arbitrary user to any value."}]}
{"output_list": [{"function_name": "ToOwner", "vulnerability": "Typo Constructor", "description": "The ToOwner function has an integer overflow in the line `owner = msg.sender;`. This allows an attacker to set the balance of an arbitrary user to any value."}]}
]
---

### Bad Randomness

The PayWinner function has an integer overflow in the line `uint ownerTax = 6 * totalBounty / 100;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Bad Randomness

The PayWinner function has an integer overflow in the line `uint winnerPrice = totalBounty - ownerTax;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Bad Randomness

The PayWinner function has an integer overflow in the line `if (winnerPrice > 0) {`. This allows an attacker to set the balance of an arbitrary user to any value.

### Bad Randomness

The PayWinner function has an integer overflow in the line `if (winnerPrice > 0) {`. This allows an attacker to set the balance of an arbitrary user to any value.

### Bad Randomness

The PayWinner function has an integer overflow in the line `if (winnerPrice > 0) {`. This allows an attacker to set the balance of an arbitrary user to any value.

### Bad Randomness

The PayWinner function has an integer overflow in the line `if (winnerPrice > 0) {`. This allows an attacker to set the balance of an arbitrary user to any value.

### Bad Randomness

The PayWinner function has an integer overflow in the line `if (winnerPrice > 0) {`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow


The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow


The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[msg.sender] += _value;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow


The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.


### Integer Overflow


The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow


The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow


The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `balances[target] += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;`. This allows an attacker to set the balance of an arbitrary user to any value.

### Integer Overflow

The mintToken function has an integer overflow in the line `totalSupply += mintedAmount;