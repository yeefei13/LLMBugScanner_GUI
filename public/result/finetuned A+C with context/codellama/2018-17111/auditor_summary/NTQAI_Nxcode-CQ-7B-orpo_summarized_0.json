{
    "output_list": [
        {
            "function_name": "distribute",
            "vulnerability": "Integer Overflow",
            "description": "The vulnerability exists in the line `totalAmount += _amounts[a];`. The integer overflow in the calculation allows unauthorized deductions and logical inconsistencies. This bypasses the subsequent `require` check, leading to unauthorized deductions and logical inconsistencies. The attack can be prevented by using the SafeMath library, which ensures arithmetic operations are safe. The attack can also be prevented by using the following checks: `require(_amounts[a] > 0);`, `require(_amounts[a] <= _value);`, `require(_value > 0);`, `require(_to != 0x0);`, `require(_amounts[a] + _amounts[_to] <= _value);`, `require(_value == _amounts[_to] * _price + _amounts[_from] * _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from] * _price + _amounts[_to] * _price == _value);`, `require(_amounts[_from] + _amounts[_to] == _value / _price);`, `require(_amounts[_from]