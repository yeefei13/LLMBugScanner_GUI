{
    "output_list": [
        {
            "function_name": "getTokens",
            "vulnerability": "Integer Overflow",
            "reason": "The `tokensPerEth` variable is multiplied by the `msg.value` to calculate the number of tokens to be distributed. If `msg.value` is too large, it can cause an integer overflow, leading to an incorrect calculation of the tokens to be distributed."
        },
        {
            "function_name": "getTokens",
            "vulnerability": "Access Control",
            "reason": "The `getTokens` function is public, allowing anyone to call it and potentially bypass the minimum contribution requirement."
        },
        {
            "function_name": "getTokens",
            "vulnerability": "Denial of Service",
            "reason": "The `getTokens` function does not check if the distribution is finished before allowing a new transaction. This can lead to a denial of service attack, as the contract will not allow any more tokens to be distributed."
        },
        {
            "function_name": "burn",
            "vulnerability": "Access Control",
            "reason": "The `burn` function is public, allowing anyone to call it and potentially bypass the burn condition."
        },
        {
            "function_name": "burn",
            "vulnerability": "Denial of Service",
            "reason": "The `burn` function does not check if the burn amount is greater than the balance of the caller. This can lead to a denial of service attack, as the contract will not allow any more tokens to be burned."
        }
    ]
}