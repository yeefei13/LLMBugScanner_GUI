 {
    "output_list": [
        {
            "function_name": "getTokens",
            "vulnerability": "Integer Overflow",
            "reason": "The 'value' variable is initialized to '2500e18' and can be manipulated by the user due to a typo in the function, allowing an attacker to overflow the 'totalRemaining' variable and gain unexpected tokens."
        },
        {
            "function_name": "getTokens",
            "vulnerability": "Access Control",
            "reason": "The 'getTokens' function is marked as 'onlyWhitelist' and can only be invoked by whitelisted addresses, which can be set to any address by the owner. This access control issue can be exploited to allow any attacker to transfer tokens from the contract."
        },
        {
            "function_name": "distr",
            "vulnerability": "Integer Overflow",
            "reason": "The 'totalDistributed' and 'totalRemaining' variables are manipulated without proper overflow checks, allowing the distribution function to overflow and granting the owner of the contract unintendedly large amounts of tokens."
        },
        {
            "function_name": "transferFrom",
            "vulnerability": "Wrong Logic",
            "reason": "The 'transferFrom' function allows a spender to transfer tokens on behalf of the caller, but does not check if the caller has sufficient balance, allowing a spender to transfer tokens from any other user and drain the assets."
        },
        {
            "function_name": "approve",
            "vulnerability": "Bad Randomness",
            "reason": "The 'approve' function does not check if the provided allowance is non-zero before allowing a spender to transfer tokens, allowing a spender to overwrite an existing allowance and steal tokens from the owner."
        }
    ]
}