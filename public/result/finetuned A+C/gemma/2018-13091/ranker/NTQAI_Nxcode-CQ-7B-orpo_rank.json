[
  {
    "function_name": "distributeToken",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `distributeToken` function has an integer overflow vulnerability. This vulnerability can be exploited by unauthorized users to distribute tokens arbitrarily. The function subtracts the `_value` from the `balanceOf[owner]` and adds it to the `balanceOf[addresses[i]]`. If the `_value` is greater than the `balanceOf[owner]`, it will cause an integer overflow, leading to incorrect token distribution.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  },
  {
    "function_name": "mintToken",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `mintToken` function has an integer overflow vulnerability. This vulnerability can be exploited by the contract owner to mint tokens to arbitrary addresses. The function adds the `mintedAmount` to the `balanceOf[target]` and `totalSupply`. If the `mintedAmount` is greater than the maximum value that can be stored in a `uint256`, it will cause an integer overflow, leading to incorrect token minting.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  },
  {
    "function_name": "burn",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `burn` function has an integer overflow vulnerability. This vulnerability can be exploited by the contract owner to burn tokens. The function subtracts the `_value` from the `balanceOf[msg.sender]` and `totalSupply`. If the `_value` is greater than the `balanceOf[msg.sender]`, it will cause an integer overflow, leading to incorrect token burning.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  },
  {
    "function_name": "transferFrom",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `transferFrom` function has an integer overflow vulnerability. This vulnerability can be exploited by the contract owner to transfer tokens from arbitrary addresses. The function subtracts the `_value` from the `balanceOf[_from]` and adds it to the `balanceOf[_to]`. If the `_value` is greater than the `balanceOf[_from]`, it will cause an integer overflow, leading to incorrect token transfer.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  },
  {
    "function_name": "approve",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `approve` function has an integer overflow vulnerability. This vulnerability can be exploited by the contract owner to approve arbitrary tokens for transfer. The function adds the `_value` to the `allowance[msg.sender][_spender]`. If the `_value` is greater than the maximum value that can be stored in a `uint256`, it will cause an integer overflow, leading to incorrect token approval.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  },
  {
    "function_name": "approveAndCall",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `approveAndCall` function has an integer overflow vulnerability. This vulnerability can be exploited by the contract owner to approve arbitrary tokens for transfer and call a contract. The function adds the `_value` to the `allowance[msg.sender][_spender]`. If the `_value` is greater than the maximum value that can be stored in a `uint256`, it will cause an integer overflow, leading to incorrect token approval.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  },
  {
    "function_name": "burnFrom",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "The `burnFrom` function has an integer overflow vulnerability. This vulnerability can be exploited by the contract owner to burn tokens from arbitrary addresses. The function subtracts the `_value` from the `balanceOf[_from]` and `totalSupply`. If the `_value` is greater than the `balanceOf[_from]`, it will cause an integer overflow, leading to incorrect token burning.",
    "correctness": 7,
    "severity": 8,
    "profitability": 5
  }
]