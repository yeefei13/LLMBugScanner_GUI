[
  {
    "function_name": "function () external { throw; }",
    "auditor_idx": 0,
    "vulnerability": "Unhandled Fallback Function",
    "criticism": "The fallback function is currently unhandled, which means that any Ether sent to the contract will be lost. This vulnerability can be exploited by malicious actors to steal Ether from the contract.",
    "correctness": 6,
    "severity": 7,
    "profitability": 5
  },
  {
    "function_name": "function transfer(address _to, uint256 _amount) returns (bool success)",
    "auditor_idx": 0,
    "vulnerability": "Unchecked Balance Subtraction",
    "criticism": "The function 'transfer' does not check if the balance of the sender is sufficient before subtracting the transfer amount. This vulnerability can be exploited by malicious actors to steal tokens from the contract.",
    "correctness": 7,
    "severity": 7,
    "profitability": 5
  },
  {
    "function_name": "function transferFrom(address _from, address _to, uint256 _amount) returns (bool success)",
    "auditor_idx": 0,
    "vulnerability": "Unchecked Balance Subtraction",
    "criticism": "The function 'transferFrom' does not check if the balance of the sender is sufficient before subtracting the transfer amount. This vulnerability can be exploited by malicious actors to steal tokens from the contract.",
    "correctness": 7,
    "severity": 7,
    "profitability": 5
  },
  {
    "function_name": "function approve(address _spender, uint256 _amount) returns (bool success)",
    "auditor_idx": 0,
    "vulnerability": "Unchecked Balance Subtraction",
    "criticism": "The function 'approve' does not check if the balance of the sender is sufficient before approving the transfer amount. This vulnerability can be exploited by malicious actors to steal tokens from the contract.",
    "correctness": 7,
    "severity": 7,
    "profitability": 5
  },
  {
    "function_name": "function approveAndCall(address _spender, uint256 _amount, bytes _extraData) returns (bool success)",
    "auditor_idx": 0,
    "vulnerability": "Unchecked Balance Subtraction",
    "criticism": "The function 'approveAndCall' does not check if the balance of the sender is sufficient before approving the transfer amount. This vulnerability can be exploited by malicious actors to steal tokens from the contract.",
    "correctness": 7,
    "severity": 7,
    "profitability": 5
  }
]