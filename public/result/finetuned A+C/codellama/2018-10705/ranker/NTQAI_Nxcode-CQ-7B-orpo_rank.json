[
  {
    "function_name": "setOwner",
    "auditor_idx": 0,
    "vulnerability": "Access Control",
    "criticism": "The setOwner function allows an attacker to set an arbitrary owner. This can be exploited to take control of the contract and manipulate its behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "unlockToken",
    "auditor_idx": 0,
    "vulnerability": "Access Control",
    "criticism": "The unlockToken function allows an attacker to set an arbitrary owner. This can be exploited to take control of the contract and manipulate its behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "uploadBalances",
    "auditor_idx": 0,
    "vulnerability": "Access Control",
    "criticism": "The uploadBalances function allows an attacker to set an arbitrary owner. This can be exploited to take control of the contract and manipulate its behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "lockBalances",
    "auditor_idx": 0,
    "vulnerability": "Access Control",
    "criticism": "The lockBalances function allows an attacker to set an arbitrary owner. This can be exploited to take control of the contract and manipulate its behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "balancesUploaded",
    "auditor_idx": 0,
    "vulnerability": "Access Control",
    "criticism": "The balancesUploaded function allows an attacker to set an arbitrary owner. This can be exploited to take control of the contract and manipulate its behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "setOwner",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in setOwner function allows an attacker to set the owner's balance to any value. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "transfer",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in transfer function allows an attacker to set an arbitrary value for an arbitrary user. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "transferFrom",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in transferFrom function allows an attacker to set an arbitrary value for an arbitrary user, and an arbitrary amount for an arbitrary target. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "receiveApproval",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in receiveApproval function allows an attacker to set an arbitrary value for an arbitrary user, and an arbitrary amount for an arbitrary target. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "safeAdd",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in safeAdd function allows an attacker to set an arbitrary value for an arbitrary user. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "safeSub",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in safeSub function allows an attacker to set an arbitrary value for an arbitrary user. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  },
  {
    "function_name": "safeMul",
    "auditor_idx": 0,
    "vulnerability": "Integer Overflow",
    "criticism": "Integer overflow in safeMul function allows an attacker to set an arbitrary value for an arbitrary user. This can be exploited to manipulate the contract's behavior.",
    "correctness": 7,
    "severity": 9,
    "profitability": 7
  }
]