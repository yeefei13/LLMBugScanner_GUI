{"output_list": [{"function_name": "setBettingCondition", "vulnerability": "Integer Overflow", "reason": "Integer overflow in setBettingCondition function allows an attacker to set the betting price to any value, including zero."}]}
{"output_list": [{"function_name": "getMaxContenders", "vulnerability": "Integer Overflow", "reason": "Integer overflow in getMaxContenders function allows an attacker to set the maximum number of contestants to any value, including zero."}]}
]}
contract Lotto {
    function setBettingCondition(uint _contenders, uint _bettingprice) public {
        arraysize = _contenders;
        if(arraysize>100)
            arraysize = 1000;
        bettingprice = _bettingprice;
    }
    function getMaxContenders() constant returns(uint){
        return arraysize;
    }
    function getBettingPrice() constant returns(uint){
        return bettingprice;
    }
}
contract Lotto is LottoBase {
    function Lotto() public {
        developer = msg.sender;
        simplelottery();
    }
    function getLottoIndex() constant returns(uint) {
        return _gameindex;
    }
    function getLotteryStartTime() constant returns(uint) {
        return _starttime;
    }
    function getLotteryEndTime() constant returns(uint) {
        return _starttime + 1 days;
    }
    function getLotteryBalance() constant returns(uint) {
        return this.balance;
    }
    function getLotteryMoney() constant returns(uint) {
        return getLotteryMoney();
    }
    function getLotteryWinner() constant returns(address) {
        return _winner;
    }
    function getLotteryState() constant returns(uint) {
        return uint(state);
    }
    function getLotteryGuesses() constant returns(uint) {
        return numguesses;
    }
    function getLotteryGuess(uint _index) constant returns(address) {
        return guesses[_index].addr;
    }
    function getLotteryGuessValue(uint _index) constant returns(uint) {
        return guesses[_index].value;
    }
    function getLotteryGuessRandomness(uint _index) constant returns(uint) {
        return guesses[_index].randomness;
    }
    function getLotteryGuessTime(uint _index) constant returns(uint) {
        return guesses[_index].time;
    }
    function getLotteryGuessNumber(uint _index) constant returns(uint) {
        return guesses[_index].number;
    }
    function getLotteryGuessHash(uint _index) constant returns(bytes32) {
        return guesses[_index].hash;
    }
    function getLotteryGuesses() constant returns (uint[1000], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[1000], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[1000], uint[1000], uint[1000], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint[100], uint