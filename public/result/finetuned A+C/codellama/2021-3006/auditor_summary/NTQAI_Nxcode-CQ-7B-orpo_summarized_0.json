{
    "output_list": [
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sellToken function in the sellTokenForLRC function in the ProtocolFeeVault contract allows an attacker to cause an integer overflow in the following formula: 2 * a * b, where a = 2 ** 256, b = 2 ** 256. The attacker can set a = 2 ** 256, b = 2 ** 256, allowing the attacker to set a = 2 ** 256, b = 2 ** 256, resulting in a value of 2 ** 256 * 2 ** 256, which is an integer overflow."
        },
        {
            "function_name": "sellToken",
            "vulnerability": "Integer Overflow",
            "description": "The sell